{"version":3,"sources":["components/UI/Navigation/Navigation.tsx","components/CharacterPage/CharacterCard.tsx","components/UI/SearchContainer/SearchComponent.tsx","components/UI/SearchContainer/SearchContainer.tsx","components/CharacterPage/CharacterModal.tsx","components/CharacterPage/CharactersPage.tsx","servises/Api.tsx","components/EpisodePage/EpisodeTable.tsx","components/EpisodePage/EpisodePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBar","AppBar","position","color","Toolbar","className","isActive","to","CharacterCard","character","handleSelect","onClick","Card","sx","maxWidth","bgcolor","CardHeader","title","name","CardMedia","component","height","image","alt","CardContent","Typography","variant","gender","status","species","location","SearchComponent","onFilterChange","values","useState","textInputValue","setTextInputValue","handleChange","event","target","value","length","TextField","id","label","onChange","fullWidth","FormControl","FormLabel","RadioGroup","aria-label","defaultValue","map","FormControlLabel","control","Radio","filtersValues","SearchContainer","filtersList","filter","style","top","left","transform","width","border","boxShadow","p","outline","CharacterModal","onClose","Modal","open","Box","src","CharactersPage","characters","setCharacters","selectedCharacter","setSelectedCharacter","currentFilters","setCurrentFilters","tottalPages","setTottalPages","fetchCharacters","filters","page","filterKeys","Object","keys","st","key","fetch","then","response","ok","json","Promise","reject","Error","getCharacters","results","info","pages","catch","handleOpenModal","useEffect","filterName","filterValue","prev","result","Pagination","count","_","EpisodeTable","episodes","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","episode","air_date","EpisodePage","setEpisodes","fetchEpisodes","getEpisode","App","element","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca4a4ecf.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { AppBar, Toolbar } from '@mui/material'\r\nimport './Navigation.scss'\r\n\r\nexport const NavBar: React.FC = () => (\r\n  <nav>\r\n    <AppBar position=\"static\" color=\"default\">\r\n      <Toolbar className=\"Navigation\">\r\n        <NavLink\r\n          className={({ isActive }) => 'link' + (isActive ? ' activlink' : '')}\r\n          to={'/rick-and-morty'}\r\n        >\r\n          Characters\r\n        </NavLink>\r\n        <NavLink\r\n          className={({ isActive }) => 'link' + (isActive ? ' activlink' : '')}\r\n          to={'/rick-and-morty/episode'}\r\n        >\r\n          Episode\r\n        </NavLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  </nav>\r\n)\r\n","import React from 'react'\r\nimport Card from '@mui/material/Card'\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport CardMedia from '@mui/material/CardMedia'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Typography from '@mui/material/Typography'\r\n\r\ninterface ICharacterCardProps {\r\n  character: ICharacter\r\n  handleSelect: (data: ICharacter) => void\r\n}\r\n\r\nexport const CharacterCard: React.FC<ICharacterCardProps> = ({\r\n  character,\r\n  handleSelect,\r\n}) => (\r\n  <>\r\n    <li onClick={() => handleSelect(character)}>\r\n      <Card sx={{ maxWidth: 345, bgcolor: 'text.disabled' }}>\r\n        <CardHeader title={character.name} />\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"100%\"\r\n          image={character.image}\r\n          alt={character.name}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            gender:{character.gender}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {character.status}-{character.species}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            location: {character.location.name}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </li>\r\n  </>\r\n)\r\n","import React, { useState } from 'react'\r\nimport RadioGroup from '@mui/material/RadioGroup'\r\nimport Radio from '@mui/material/Radio'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport FormLabel from '@mui/material/FormLabel'\r\nimport TextField from '@mui/material/TextField'\r\n\r\ninterface ISearchComponentProps {\r\n  onFilterChange: (name: string, value: string) => void\r\n  name: string\r\n  values: string[]\r\n}\r\n\r\nexport const SearchComponent: React.FC<ISearchComponentProps> = ({\r\n  onFilterChange,\r\n  name,\r\n  values,\r\n}) => {\r\n  const [textInputValue, setTextInputValue] = useState('')\r\n\r\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    setTextInputValue(event.target.value)\r\n    onFilterChange(event.target.name, event.target.value)\r\n  }\r\n\r\n  function renderRadio() {\r\n    return (\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">{name}</FormLabel>\r\n        <RadioGroup\r\n          aria-label={name}\r\n          defaultValue=\"\"\r\n          name={name}\r\n          onChange={handleChange}\r\n        >\r\n          {values.map((value) => (\r\n            <FormControlLabel\r\n              key={value || 'All'}\r\n              value={value}\r\n              control={<Radio />}\r\n              label={value || 'All'}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    )\r\n  }\r\n\r\n  function renderInput() {\r\n    return (\r\n      <TextField\r\n        id={name}\r\n        name={name}\r\n        label={name}\r\n        value={textInputValue}\r\n        onChange={handleChange}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n      />\r\n    )\r\n  }\r\n\r\n  return <form>{values.length === 1 ? renderInput() : renderRadio()}</form>\r\n}\r\n","import React from 'react'\r\nimport { SearchComponent } from './SearchComponent'\r\nimport './SearchContainer.scss'\r\n\r\nconst filtersValues: Record<string, string[]> = {\r\n  gender: ['', 'male', 'female', 'genderless', 'unknown'],\r\n  status: ['', 'alive', 'dead', 'unknown'],\r\n  species: ['', 'Mythological Creature', 'Alien', 'Human'],\r\n  name: [''],\r\n}\r\n\r\ninterface ISearchContainerProps {\r\n  onFilterChange: (name: string, value: string) => void\r\n  filtersList: string[]\r\n}\r\n\r\nexport const SearchContainer: React.FC<ISearchContainerProps> = ({\r\n  onFilterChange,\r\n  filtersList,\r\n}) => {\r\n  return (\r\n    <div className=\"Search-Container\">\r\n      {filtersList.map((filter) => (\r\n        <SearchComponent\r\n          key={filter}\r\n          onFilterChange={onFilterChange}\r\n          name={filter}\r\n          values={filtersValues[filter]}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Modal from '@mui/material/Modal'\r\nimport { SxProps } from '@mui/system'\r\n\r\nconst style: SxProps = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  '&:focus': {\r\n    border: 'none',\r\n    outline: 'none',\r\n  },\r\n}\r\n\r\ninterface ICharacterModalProps {\r\n  character: ICharacter\r\n  onClose: () => void\r\n}\r\n\r\nexport const CharacterModal: React.FC<ICharacterModalProps> = ({\r\n  character,\r\n  onClose,\r\n}) => (\r\n  <Modal open={!!character?.id} onClose={onClose}>\r\n    <Box sx={style}>\r\n      <img src={character?.image} alt={character?.name} />\r\n      <p>name:{character?.name}</p>\r\n      <p>gender:{character?.gender}</p>\r\n      <p>\r\n        {character?.status}-{character?.species}\r\n      </p>\r\n      <p>location: {character?.location?.name}</p>\r\n    </Box>\r\n  </Modal>\r\n)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getCharacters } from '../../servises/Api'\r\nimport { CharacterCard } from './CharacterCard'\r\nimport Pagination from '@mui/material/Pagination'\r\nimport { SearchContainer } from '../UI/SearchContainer/SearchContainer'\r\nimport { CharacterModal } from './CharacterModal'\r\nimport './CharacterPage.scss'\r\n\r\nconst filtersList = ['species', 'status', 'gender']\r\n\r\nexport const CharactersPage: React.FC = () => {\r\n  const [characters, setCharacters] = useState<ICharacter[]>([])\r\n  const [selectedCharacter, setSelectedCharacter] = useState<ICharacter>(\r\n    {} as ICharacter\r\n  )\r\n  const [currentFilters, setCurrentFilters] = useState(\r\n    {} as Record<string, string>\r\n  )\r\n  const [tottalPages, setTottalPages] = useState<number>(0)\r\n\r\n  function fetchCharacters(filters: Record<string, string>, page?: number) {\r\n    getCharacters(filters, page)\r\n      .then((response) => {\r\n        setCharacters(response.results)\r\n        setTottalPages(response.info.pages)\r\n      })\r\n      .catch(() => {\r\n        setCharacters([])\r\n        setTottalPages(0)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchCharacters(currentFilters)\r\n  }, [currentFilters])\r\n\r\n  function handleOpenModal(character: ICharacter) {\r\n    setSelectedCharacter(character)\r\n  }\r\n\r\n  function handleCloseModal() {\r\n    setSelectedCharacter({} as ICharacter)\r\n  }\r\n\r\n  function handleFilter(filterName: string, filterValue: string) {\r\n    setCurrentFilters((prev) => {\r\n      const result = { ...prev }\r\n      result[filterName] = filterValue\r\n      return result\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <h1 className=\"Title\">Characters</h1>\r\n      <SearchContainer\r\n        onFilterChange={handleFilter}\r\n        filtersList={filtersList}\r\n      />\r\n      <ul className=\"Character-list\">\r\n        {!!characters.length &&\r\n          characters.map((character) => (\r\n            <CharacterCard\r\n              key={character.id}\r\n              character={character}\r\n              handleSelect={handleOpenModal}\r\n            />\r\n          ))}\r\n      </ul>\r\n\r\n      <Pagination\r\n        count={tottalPages}\r\n        color=\"primary\"\r\n        onChange={(_, page) => {\r\n          fetchCharacters(currentFilters, page)\r\n        }}\r\n      />\r\n      <CharacterModal\r\n        character={selectedCharacter}\r\n        onClose={handleCloseModal}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","export function getCharacters(filters: Record<string, string>, page = 1) {\r\n  const filterKeys = Object.keys(filters)\r\n  let st = ''\r\n  for (const key of filterKeys) {\r\n    st += `&${key}=${filters[key]}`\r\n  }\r\n  return fetch(\r\n    `https://rickandmortyapi.com/api/character?page=${page}${st}`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json()\r\n    }\r\n    return Promise.reject(new Error(`произошла ошибка`))\r\n  })\r\n}\r\n\r\n// export function getSelectedCharacters(ids: string[]): Promise<ICharacter[]> {\r\n//   return fetch(`https://rickandmortyapi.com/api/character/${ids}`).then(\r\n//     (response) => {\r\n//       if (response.ok) {\r\n//         return response.json()\r\n//       }\r\n//       return Promise.reject(new Error(`произошла ошибка`))\r\n//     }\r\n//   )\r\n// }\r\n\r\nexport function getEpisode(filters: Record<string, string>, page = 1) {\r\n  const filterKeys = Object.keys(filters)\r\n  let st = ''\r\n  for (const key of filterKeys) {\r\n    st += `&${key}=${filters[key]}`\r\n  }\r\n\r\n  return fetch(\r\n    `https://rickandmortyapi.com/api/episode?page=${page}${st}`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json()\r\n    }\r\n    return Promise.reject(new Error(`произошла ошибка`))\r\n  })\r\n}\r\n","import React from 'react'\r\nimport Table from '@mui/material/Table'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport Paper from '@mui/material/Paper'\r\nimport './EpisodeTable.scss'\r\n\r\ninterface IEpisodeTableProps {\r\n  episodes: IEpisode[]\r\n}\r\n\r\nexport const EpisodeTable: React.FC<IEpisodeTableProps> = ({ episodes }) => {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead sx={{ bgcolor: 'text.disabled' }}>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Episode</TableCell>\r\n            <TableCell align=\"left\" sx={{ maxWidth: 280 }}>\r\n              Name\r\n            </TableCell>\r\n            <TableCell align=\"left\">Air Date</TableCell>\r\n            <TableCell align=\"left\">Characters</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {episodes.map((episode) => (\r\n            <TableRow\r\n              key={episode.id}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell align=\"left\">{episode.episode}</TableCell>\r\n              <TableCell align=\"left\" sx={{ maxWidth: 280 }}>\r\n                {episode.name}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{episode.air_date}</TableCell>\r\n              <TableCell align=\"left\">\r\n                <ul className=\"character-list\">\r\n                  {episode.characters.map((character) => (\r\n                    <li key={character}>{character}</li>\r\n                  ))}\r\n                </ul>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getEpisode } from '../../servises/Api'\r\nimport { EpisodeTable } from './EpisodeTable'\r\nimport Pagination from '@mui/material/Pagination'\r\nimport { SearchContainer } from '../UI/SearchContainer/SearchContainer'\r\nimport './EpisodePage.scss'\r\n\r\nconst filtersList = ['name']\r\n\r\nexport const EpisodePage: React.FC = () => {\r\n  const [episodes, setEpisodes] = useState<IEpisode[]>([])\r\n\r\n  const [currentFilters, setCurrentFilters] = useState(\r\n    {} as Record<string, string>\r\n  )\r\n  const [tottalPages, setTottalPages] = useState<number>(0)\r\n\r\n  function fetchEpisodes(filters: Record<string, string>, page?: number) {\r\n    getEpisode(filters, page)\r\n      .then((response) => {\r\n        setEpisodes(response.results)\r\n        setTottalPages(response.info.pages)\r\n      })\r\n      .catch(() => {\r\n        setEpisodes([])\r\n        setTottalPages(0)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchEpisodes(currentFilters)\r\n  }, [currentFilters])\r\n\r\n  function handleFilter(filterName: string, filterValue: string) {\r\n    setCurrentFilters((prev) => {\r\n      const result = { ...prev }\r\n      result[filterName] = filterValue\r\n      return result\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <h1 className=\"Title\">Episodes</h1>\r\n      <SearchContainer\r\n        onFilterChange={handleFilter}\r\n        filtersList={filtersList}\r\n      />\r\n      <EpisodeTable episodes={episodes} />\r\n\r\n      <Pagination\r\n        count={tottalPages}\r\n        color=\"primary\"\r\n        onChange={(_, page) => {\r\n          fetchEpisodes(currentFilters, page)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport { NavBar } from './components/UI/Navigation/Navigation'\nimport { CharactersPage } from './components/CharacterPage/CharactersPage'\nimport { EpisodePage } from './components/EpisodePage/EpisodePage'\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <div>\n        <Routes>\n          <Route element={<CharactersPage />} path=\"/test-rick-and-morty\" />\n          <Route\n            element={<EpisodePage />}\n            path=\"/test-rick-and-morty/episode\"\n          />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}